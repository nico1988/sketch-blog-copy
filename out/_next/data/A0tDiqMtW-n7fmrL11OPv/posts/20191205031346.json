{"pageProps":{"post":{"fileName":"2019-12-04_关于removeEventListener里使用里bind不生效解决办法.md","id":"2019-12-04_关于removeEventListener里使用里bind不生效解决办法","permalink":"20191205031346","tags":["js"],"title":"关于removeEventListener里使用里bind不生效解决办法","date":"2019-12-05T03:13:46+08:00","categories":["笔记"],"cover":"https://cloud.miiiku.xyz/src/images/cover/cover-07.jpg","contentHtml":"<p>现在写JS代码都流行用<code>class</code>了，自己在写一些东西都时候也会用。</p>\n<p>但是在一个对象里如果绑定了某些事件需要在销毁时移除绑定，在使用<code>bind</code>的情况下不能正常移除。</p>\n<p>这里单独记录一下，如下代码:</p>\n<pre class=\"hljs language-js\"><code class=\"language-js\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">User</span> {\n\n  <span class=\"hljs-title function_\">constructor</span> (name) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">name</span> = name;\n    <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&quot;click&quot;</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">printName</span>.<span class=\"hljs-title function_\">bind</span>(<span class=\"hljs-variable language_\">this</span>));\n  }\n\n  name = <span class=\"hljs-string\">&quot;&quot;</span>;\n\n  printName () {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">name</span>);\n  }\n\n  destroy () {\n    <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">removeEventListener</span>(<span class=\"hljs-string\">&quot;click&quot;</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">printName</span>.<span class=\"hljs-title function_\">bind</span>(<span class=\"hljs-variable language_\">this</span>));\n  }\n\n}\n</code></pre>\n<p><code>User</code>类中<code>printName</code>方法需要访问自己到属性，如果在绑定事件时不将上下文指向自己，那么在<code>printName</code>中作用域会丢失，将会打印<code>window.name</code>;</p>\n<p>但是在使用<code>bind</code>以后，<code>destory</code>方法中的移除事件并不会生效，众所周知如果事件需要解绑，那么函数不能使用<code>匿名函数</code>或直接<code>function</code>，因为每次返回的都是不同的函数，使用<code>bind</code>同理，返回的也是一个新的不同函数。</p>\n<p>解决办法则是用一个属性去接收事件处理函数，则可以在多个地方使用:</p>\n<pre class=\"hljs language-js\"><code class=\"language-js\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">User</span> {\n\n  <span class=\"hljs-title function_\">constructor</span> (name) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">name</span> = name;\n    <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&quot;click&quot;</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">eventClick</span>);\n  }\n\n  name = <span class=\"hljs-string\">&quot;&quot;</span>;\n\n  <span class=\"hljs-comment\">// 这里保存事件函数</span>\n  eventClick = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">printName</span>.<span class=\"hljs-title function_\">bind</span>(<span class=\"hljs-variable language_\">this</span>);\n\n  printName () {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">name</span>);\n  }\n\n  destroy () {\n    <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">removeEventListener</span>(<span class=\"hljs-string\">&quot;click&quot;</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">eventClick</span>);\n  }\n\n}\n</code></pre>\n<p>本文转自：<a href=\"https://blog.csdn.net/qq_40936253/article/details/84972259\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_40936253/article/details/84972259</a></p>\n"}},"__N_SSG":true}