{"pageProps":{"post":{"fileName":"2018-08-28_关于input输入中文时，不断触发input事件的问题.md","id":"2018-08-28_关于input输入中文时，不断触发input事件的问题","permalink":"20180828195506","tags":["html","js"],"title":"关于input输入中文时，不断触发input事件的问题","date":"2018-08-28T19:55:06+08:00","categories":["笔记"],"cover":"https://cloud.miiiku.xyz/src/images/cover/cover-10.jpg","pageview":276,"contentHtml":"<p>监听一个文本框的<em>input</em>事件的时候，当输入中文但未实际填充到文本框还在候选时，也会一直触发<em>input</em>事件，如图：(搬运原文图片)</p>\n<p><img src=\"https://qiniu.sukoshi.xyz/attach/2018-08/1069543-20171009211759324-6471773.gif\" alt=\"https://qiniu.sukoshi.xyz/attach/2018-08/1069543-20171009211759324-6471773.gif\" loading=\"lazy\"></p>\n<p><em>compositionstart</em>  事件触发于一段文字的输入之前（类似于 keydown 事件，但是该事件仅在若干可见字符的输入之前，而这些可见字符的输入可能需要一连串的键盘操作、语音识别或者点击输入法的备选词）</p>\n<p><em>compositionend</em> 当文本段落的组织已经完成或取消时，会触发该事件。</p>\n<p>触发<em>compositionstart</em>时，文本框会填入 “虚拟文本”（待确认文本），同时触发<em>input</em>事件；在触发<em>compositionend</em>时，就是填入实际内容后（已确认文本）。</p>\n<h5>解决思路：</h5>\n<p>声明一个标记flag，在compositionstart、compositionend两个事件过程之间的时候flag值为false，在input事件中通过flag的值来判断当前输入的状态。</p>\n<pre class=\"hljs language-js\"><code class=\"language-js\">    <span class=\"hljs-keyword\">var</span> flag = <span class=\"hljs-literal\">true</span>;\n\n    $(<span class=\"hljs-string\">&#x27;#txt&#x27;</span>).<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">&#x27;compositionstart&#x27;</span>,<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>){\n        flag = <span class=\"hljs-literal\">false</span>;\n    })\n\n    $(<span class=\"hljs-string\">&#x27;#txt&#x27;</span>).<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">&#x27;compositionend&#x27;</span>,<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>){\n        flag = <span class=\"hljs-literal\">true</span>;\n    })\n\n    $(<span class=\"hljs-string\">&#x27;#txt&#x27;</span>).<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">&#x27;input&#x27;</span>,<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>){\n        <span class=\"hljs-keyword\">var</span> _this = <span class=\"hljs-variable language_\">this</span>;\n        <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>){\n            <span class=\"hljs-keyword\">if</span>(flag){\n                <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>($(_this).<span class=\"hljs-title function_\">val</span>());\n            }\n        },<span class=\"hljs-number\">0</span>)\n    })\n</code></pre>\n<p><img src=\"https://qiniu.sukoshi.xyz/attach/2018-08/1069543-20171009211830262-1175113284.gif\" alt=\"https://qiniu.sukoshi.xyz/attach/2018-08/1069543-20171009211830262-1175113284.gif\" loading=\"lazy\"></p>\n<h5>tips:</h5>\n<p>为什么使用延时器？</p>\n<p>因为选词结束的时候input会比compositionend先一步触发，此时flag还未调整为true，所以不能触发到console，故用setTimeout将其优先级滞后。</p>\n<p>本文转载于: <a href=\"https://www.cnblogs.com/lonhon/p/7643095.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/lonhon/p/7643095.html</a></p>\n"}},"__N_SSG":true}