{"pageProps":{"post":{"fileName":"2018-04-11_React.js Vue.js 项目部署页面刷新404.md","id":"2018-04-11_React.js Vue.js 项目部署页面刷新404","permalink":"20180411195344","tags":["nginx","vue","react"],"title":"React.js Vue.js 项目部署页面刷新404","date":"2018-04-11T19:53:44+08:00","categories":["笔记"],"cover":null,"pageview":260,"contentHtml":"<p>使用react，vue等开发的项目因为是前后端分离，所有打包发布到服务器以后，需要放在一个静态服务器中运行</p>\n<h6>配置Nginx服务器:</h6>\n<pre class=\"hljs\"><code>cd /etc/nginx/conf.d\nvim demo.confg\n</code></pre>\n<p>添加如下信息:</p>\n<pre class=\"hljs\"><code>server {\n    listen \t80;\n    server_name your.domain.com;\n\n    location / {\n        try_files $uri $uri/ /index.html;\n        root   your project path;\n        index  index.html index.htm;\n    }\n}\n</code></pre>\n<h6>重启Nginx:</h6>\n<pre class=\"hljs\"><code>service nginx restart\n</code></pre>\n<p>重启以后访问你的域名或者IP就可以正常访问项目</p>\n<h6>注意事项:</h6>\n<p>当你使用了<em>react-router的browserHistory模式</em>或者使用了<em>vue-router的history模式</em>刷新页面会出现404的情况</p>\n<p>解决方法:</p>\n<p>修改Nginx配置信息如下:</p>\n<pre class=\"hljs\"><code>location / {\n        try_files $uri $uri/ /index.html;\n}\n</code></pre>\n<p>原理:</p>\n<p>因为我们的项目只有一个根入口，当输入类似/home的url时，找不到这个页面，这时nginx会尝试加载index.html，加载index.html之后，react-router或vue-router就能起作用并匹配我们输入的/home路由，从而显示正确的home页面</p>\n<p>参考地址:<a href=\"https://segmentfault.com/q/1010000005155831\" target=\"_blank\" rel=\"noopener\">https://segmentfault.com/q/1010000005155831</a></p>\n"}},"__N_SSG":true}